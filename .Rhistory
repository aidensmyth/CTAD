std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
stats_df <- append(stats_df,temp_df)
}
return(stats_df)
}
final_stats_df <- aggregate_table(dfs)
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
stats_df <- append(stats_df,temp_df)
}
return(stats_df)
}
stats_df <- aggregate_table(dfs)
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
stats_df <- append(stats_df,temp_df)
}
return(stats_df)
}
stats_df <- aggregate_table(dfs)
stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
stats_df <- append(stats_df,temp_df)
}
return(stats_df)
}
stats_df <- aggregate_table(dfs)
stats_df[1]
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
stats_df <- append(stats_df,temp_df)
}
return(stats_df)
}
stats_df <- aggregate_table(dfs)
stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(remainder)
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (length(round(remainder)==0)) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (str_length(round(remainder)==0)) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(round(remainder)==0)) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(round(remainder))==0)) {
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(round(remainder))==0) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(round(remainder))==1) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(floor(remainder))==1) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
final_stats_df <- append(stats_df,temp_df)
}
return(final_stats_df)
}
final_stats_df <- aggregate_table(dfs)
final_stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(floor(remainder))==1) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(dfs) {
stats_df = list()
for (i in 1:length(dfs)){
mean_df = aggregate(Time~Year + Month,data=dfs[[i]],mean)
std_df = aggregate(Time~Year + Month,data=dfs[[i]],sd)
temp_df <- mean_df %>%
rename("Mean" = "Time")
temp_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
temp_df$sd_seconds<-std_df$Time
stats_df <- append(stats_df,temp_df)
}
return(stats_df)
}
stats_df <- aggregate_table(dfs)
stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(floor(remainder))==1) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(df) {
mean_df = aggregate(Time~Year + Month,data=df,mean)
std_df = aggregate(Time~Year + Month,data=df,sd)
stats_df <- mean_df %>%
rename("Mean" = "Time")
stats_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
stats_df$sd_seconds<-std_df$Time
return(stats_df)
}
stats_df <- aggregate_table(dfs)
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(floor(remainder))==1) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(df) {
mean_df = aggregate(Time~Year + Month,data=df,mean)
std_df = aggregate(Time~Year + Month,data=df,sd)
stats_df <- mean_df %>%
rename("Mean" = "Time")
stats_df$Mean <-paste(lapply(temp_df$Mean,sec_to_min))
stats_df$sd_seconds<-std_df$Time
return(stats_df)
}
stats_df <- aggregate_table(dfs[[2]])
library("dplyr")
sec_to_min <- function(sec) {
mins = sec%/%60
remainder = sec%%60
print(round(remainder))
if (stri_length(floor(remainder))==1) {
time_ms = paste(toString(mins),":0",toString(round(remainder,2)),sep="")
return(time_ms)
} else {
time_ms = paste(toString(mins),":",toString(round(remainder,2)),sep="")
return(time_ms)
}
}
aggregate_table <- function(df) {
mean_df = aggregate(Time~Year + Month,data=df,mean)
std_df = aggregate(Time~Year + Month,data=df,sd)
stats_df <- mean_df %>%
rename("Mean" = "Time")
stats_df$Mean <-paste(lapply(stats_df$Mean,sec_to_min))
stats_df$sd_seconds<-std_df$Time
return(stats_df)
}
stats_df <- aggregate_table(dfs[[2]])
stats_df
#sec_to_min(min(dfs[[2]]$Time))
#sec_to_min((dfs[[2]]$Time))
#my_boxplots
#my_violin
events = unique(tffrs_df$Event)
library(shiny); runApp('C:/myapp/r shiny.R')
